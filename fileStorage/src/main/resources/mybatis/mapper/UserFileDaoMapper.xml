<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhao.fileserver.dao.UserFileDao">
    <resultMap id="UserFileMap" type="UserFile">
        <!--只需要映射列名与属性名不一致的-->
        <id column="id" property="id"></id>
        <result column="file_name" property="fileName"></result>
        <result column="download_counts" property="downloadCounts"></result>
        <result column="upload_time" property="uploadTime"></result>
        <result column="user_id" property="userId"></result>
    </resultMap>
    <!--根据UserId查询当前用户的文件列表-->
    <select id="queryByUserId" parameterType="Integer" resultMap="UserFileMap">
        select * from t_files where user_id=#{id};
    </select>
    <!--根据UserFileId查询文件信息-->
    <select id="queryByUserFileId" parameterType="Integer" resultMap="UserFileMap">
        select * from t_files where id=#{id};
    </select>
    <!--保存新上传的文件-->
    <insert id="save" parameterType="UserFile" useGeneratedKeys="true" keyProperty="id">
        insert into t_files(file_name, ext, path, size, type, download_counts, upload_time, user_id)
        VALUES (#{fileName},#{ext},#{path},#{size},#{type},#{downloadCounts},#{uploadTime},#{userId});
    </insert>
    <!--跟新文件的下载次数-->
    <update id="update" parameterType="UserFile">
        update t_files set download_counts=#{downloadCounts} where id=#{id};
    </update>
    <!--根据UserFileId删除文件-->
    <delete id="delete" parameterType="Integer">
        delete from t_files
        where id=#{id};
    </delete>

</mapper>